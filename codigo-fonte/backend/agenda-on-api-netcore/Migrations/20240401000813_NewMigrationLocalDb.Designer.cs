// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using agenda_on_api_netcore;

#nullable disable

namespace agenda_on_api_netcore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240401000813_NewMigrationLocalDb")]
    partial class NewMigrationLocalDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Agendamento", b =>
                {
                    b.Property<int>("AgendamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgendamentoId"));

                    b.Property<int?>("CalendarioId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraAgendamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("AgendamentoId");

                    b.HasIndex("CalendarioId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("StatusId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Calendario", b =>
                {
                    b.Property<int>("CalendarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalendarioId"));

                    b.Property<int?>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraConfigurada")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GestorId")
                        .HasColumnType("int");

                    b.HasKey("CalendarioId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("GestorId");

                    b.ToTable("Calendarios");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Colaborador", b =>
                {
                    b.Property<int>("ColaboradorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColaboradorId"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColaboradorId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Comissao", b =>
                {
                    b.Property<int>("ComissaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComissaoId"));

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("ComissaoId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Comissoes");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Gestor", b =>
                {
                    b.Property<int>("GestorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GestorId"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GestorId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Gestores");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Servico", b =>
                {
                    b.Property<int>("ServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicoId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ServicoId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.ServicoAgendamento", b =>
                {
                    b.Property<int>("ServicoAgendamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServicoAgendamentoId"));

                    b.Property<int>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("ServicoAgendamentoId");

                    b.HasIndex("AgendamentoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("ServicoAgendamentos");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.StatusAtendimento", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("StatusAtendimentos");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Agendamento", b =>
                {
                    b.HasOne("agenda_on_api_netcore.Entities.Calendario", "Calendario")
                        .WithMany("Agendamentos")
                        .HasForeignKey("CalendarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("agenda_on_api_netcore.Entities.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("agenda_on_api_netcore.Entities.Colaborador", "Colaborador")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("agenda_on_api_netcore.Entities.StatusAtendimento", "StatusAtendimento")
                        .WithMany("Agendamentos")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Calendario");

                    b.Navigation("Cliente");

                    b.Navigation("Colaborador");

                    b.Navigation("StatusAtendimento");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Calendario", b =>
                {
                    b.HasOne("agenda_on_api_netcore.Entities.Colaborador", "Colaborador")
                        .WithMany("Calendarios")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("agenda_on_api_netcore.Entities.Gestor", "Gestor")
                        .WithMany("Calendarios")
                        .HasForeignKey("GestorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Colaborador");

                    b.Navigation("Gestor");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Comissao", b =>
                {
                    b.HasOne("agenda_on_api_netcore.Entities.Colaborador", "Colaborador")
                        .WithMany("Comissoes")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("agenda_on_api_netcore.Entities.Servico", "Servico")
                        .WithMany("Comissoes")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Colaborador");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.ServicoAgendamento", b =>
                {
                    b.HasOne("agenda_on_api_netcore.Entities.Agendamento", "Agendamento")
                        .WithMany("ServicoAgendamentos")
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("agenda_on_api_netcore.Entities.Servico", "Servico")
                        .WithMany("ServicoAgendamentos")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agendamento");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Agendamento", b =>
                {
                    b.Navigation("ServicoAgendamentos");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Calendario", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Cliente", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Colaborador", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Calendarios");

                    b.Navigation("Comissoes");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Gestor", b =>
                {
                    b.Navigation("Calendarios");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.Servico", b =>
                {
                    b.Navigation("Comissoes");

                    b.Navigation("ServicoAgendamentos");
                });

            modelBuilder.Entity("agenda_on_api_netcore.Entities.StatusAtendimento", b =>
                {
                    b.Navigation("Agendamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
